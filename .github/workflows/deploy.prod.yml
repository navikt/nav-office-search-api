name: Deploy-to-prod
on:
  release:
    types: [released]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod-fss:personbruker
    steps:
      - uses: actions/checkout@v1
      - name: Abort if branch is not master
        if: github.event.release.target_commitish != 'master'
        run: echo "Release is not on master, aborting"; exit 1;
      - name: Define build environment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          IMAGE_VERSION_RAW=$(echo ${GITHUB_WORKFLOW})-$(echo ${GITHUB_SHA})
          echo "CI=true" >> $GITHUB_ENV
          echo "IMAGE_REGISTRY=docker.pkg.github.com/$(echo ${GITHUB_REPOSITORY})" >> $GITHUB_ENV
          echo "IMAGE_NAME=$(echo ${GITHUB_REPOSITORY##*/})" >> $GITHUB_ENV
          echo "IMAGE_VERSION=${IMAGE_VERSION_RAW,,}" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=$(echo ${GITHUB_TOKEN})" >> $GITHUB_ENV
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - name: Docker build and push
        run: |
          echo $GITHUB_TOKEN | docker login $IMAGE_REGISTRY -u ${GITHUB_REPOSITORY} --password-stdin
          docker build -t $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_VERSION .
          docker push $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_VERSION
      - name: Generate nais variables
        run: |
          cat > .nais/vars.yaml <<EOF
          namespace: personbruker
          ingresses:
            - https://nav-office-search-api.intern.nav.no
            - https://nav-office-search-api.prod-fss-pub.nais.io
          env:
            - name: NORG_ENHET_API
              value: https://app.adeo.no/norg2/api/v1/enhet
            - name: TPS_ADRESSESOK_API
              value: https://app.adeo.no/tpsws-aura/api/v1/adressesoek
            - name: NODE_EXTRA_CA_CERTS
              value: "/etc/ssl/ca-bundle.pem"
          image: $IMAGE_REGISTRY/$IMAGE_NAME
          version: $IMAGE_VERSION
          EOF
      - uses: nais/deploy/actions/deploy@master
        env:
          CLUSTER: prod-fss
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          RESOURCE: .nais/config.prod.yaml
          VARS: .nais/vars.yaml
